module.exports=function(d){function c(e){return"/*!\n* "+e+'\n* http://github.com/RobinHerbots/jquery.inputmask\n* Copyright (c) 2010 - <%= grunt.template.today("yyyy") %> <%= pkg.author.name %>\n* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n* Version: <%= pkg.version %>\n*/\n'}function a(j){var e={};var g=d.file.expand(j+"/*.js");for(var i in g){var h=g[i].replace("js/",""),f=h.replace(".js",".min.js");b(g[i],"build/"+h,h.indexOf("extension")==-1?["jquery"]:["jquery","./jquery.inputmask"]);e[h]={dest:"dist/inputmask/"+h,src:"build/"+h,options:{banner:c(h),beautify:true,mangle:false,preserveComments:"some",ASCIIOnly:true}};e[f]={dest:"dist/inputmask/"+f,src:"build/"+h,options:{banner:c(f),preserveComments:"some",ASCIIOnly:true}}}g=d.file.expand(j+"/*.extensions.js");g.splice(0,0,"js/jquery.inputmask.js");e.inputmaskbundle={files:{"dist/<%= pkg.name %>.bundle.js":g},options:{banner:c("<%= pkg.name %>.bundle"),beautify:true,mangle:false,preserveComments:"some",ASCIIOnly:true}};e.inputmaskbundlemin={files:{"dist/<%= pkg.name %>.bundle.min.js":g},options:{banner:c("<%= pkg.name %>.bundle"),preserveComments:"some",ASCIIOnly:true}};return e}function b(j,k,h){function i(){return f.replace(new RegExp("\\(jQuery\\).*$"),"")}function e(m){var l=[];m.forEach(function(n){l.push("require('"+n+"')")});return l.join(", ")}var f=d.file.read(j),g="(function (factory) {if (typeof define === 'function' && define.amd) {define("+JSON.stringify(h)+", factory);} else if (typeof exports === 'object') {module.exports = factory("+e(h)+");} else {factory(jQuery);}}\n"+i()+");";d.file.write(k,g)}d.initConfig({pkg:d.file.readJSON("package.json"),uglify:a("js"),clean:["dist"],qunit:{files:["qunit/qunit.html"]},bump:{options:{files:["package.json","bower.json","composer.json","component.json"],updateConfigs:["pkg"],commit:false,createTag:false,push:false}},release:{options:{bump:false,commitMessage:"jquery.inputmask <%= version %>"}},nugetpack:{dist:{src:function(){return process.platform==="linux"?"nuspecs/jquery.inputmask.linux.nuspec":"nuspecs/jquery.inputmask.nuspec"}(),dest:"dist/",options:{version:"<%= pkg.version %>"}}},nugetpush:{dist:{src:"dist/jQuery.InputMask.<%= pkg.version %>.nupkg"}},shell:{options:{stderr:false},gitcommitchanges:{command:["git add .","git reset -- package.json",'git commit -m "jquery.inputmask <%= pkg.version %>"'].join("&&")}}});d.loadNpmTasks("grunt-contrib-uglify");d.loadNpmTasks("grunt-contrib-clean");d.loadNpmTasks("grunt-contrib-qunit");d.loadNpmTasks("grunt-bump");d.loadNpmTasks("grunt-release");d.loadNpmTasks("grunt-nuget");d.loadNpmTasks("grunt-shell");d.registerTask("publish:patch",["clean","bump:patch","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]);d.registerTask("publish:minor",["clean","bump:minor","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]);d.registerTask("publish:major",["clean","bump:major","uglify","shell:gitcommitchanges","release","nugetpack","nugetpush"]);d.registerTask("default",["bump:prerelease","clean","uglify"])};
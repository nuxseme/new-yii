describe("Dropdown",function(){beforeEach(function(){var a;jasmine.Dataset.useMock();setFixtures(fixtures.html.menu);a=$("#jasmine-fixtures");this.$menu=a.find(".tt-dropdown-menu");this.$menu.html(fixtures.html.dataset);this.view=new Dropdown({menu:this.$menu,datasets:[{}]});this.dataset=this.view.datasets[0]});it("should throw an error if menu and/or datasets is missing",function(){expect(a).toThrow();expect(b).toThrow();function a(){new Dropdown({menu:".menu"})}function b(){new Dropdown({datasets:true})}});describe("when click event is triggered on a suggestion",function(){it("should trigger suggestionClicked",function(){var a;this.view.onSync("suggestionClicked",a=jasmine.createSpy());this.$menu.find(".tt-suggestion").first().click();expect(a).toHaveBeenCalled()})});describe("when mouseenter is triggered on a suggestion",function(){it("should remove pre-existing cursor",function(){var b,a;b=this.$menu.find(".tt-suggestion").first();a=this.$menu.find(".tt-suggestion").last();b.addClass("tt-cursor");a.mouseenter();expect(b).not.toHaveClass("tt-cursor");expect(a).toHaveClass("tt-cursor")});it("should set the cursor",function(){var a;a=this.$menu.find(".tt-suggestion").first();a.mouseenter();expect(a).toHaveClass("tt-cursor")});it("should not trigger cursorMoved",function(){var b,a;this.view.onSync("cursorMoved",b=jasmine.createSpy());a=this.$menu.find(".tt-suggestion").first();a.mouseenter();expect(b).not.toHaveBeenCalled()})});describe("when mouseleave is triggered on a suggestion",function(){it("should remove the cursor",function(){var a;a=this.$menu.find(".tt-suggestion").first();a.mouseenter().mouseleave();expect(a).not.toHaveClass("tt-cursor")})});describe("when rendered is triggered on a dataset",function(){it("should hide the dropdown if empty",function(){this.dataset.isEmpty.andReturn(true);this.view.open();this.view._show();this.dataset.trigger("rendered");expect(this.$menu).not.toBeVisible()});it("should show the dropdown if not empty",function(){this.dataset.isEmpty.andReturn(false);this.view.open();this.view._hide();this.dataset.trigger("rendered");expect(this.$menu).toBeVisible()});it("should trigger datasetRendered",function(){var a;this.view.onSync("datasetRendered",a=jasmine.createSpy());this.dataset.trigger("rendered");expect(a).toHaveBeenCalled()})});describe("#open",function(){it("should display the menu if not empty",function(){this.view.close();this.view.isEmpty=false;this.view.open();expect(this.$menu).toBeVisible()});it("should not display the menu if empty",function(){this.view.close();this.view.isEmpty=true;this.view.open();expect(this.$menu).not.toBeVisible()});it("should trigger opened",function(){var a;this.view.onSync("opened",a=jasmine.createSpy());this.view.close();this.view.open();expect(a).toHaveBeenCalled()})});describe("#close",function(){it("should hide the menu",function(){this.view.open();this.view.close();expect(this.$menu).not.toBeVisible()});it("should trigger closed",function(){var a;this.view.onSync("closed",a=jasmine.createSpy());this.view.open();this.view.close();expect(a).toHaveBeenCalled()})});describe("#setLanguageDirection",function(){it("should update css for given language direction",function(){})});describe("#moveCursorUp",function(){beforeEach(function(){this.view.open()});it("should move the cursor up",function(){var b,a;b=this.view._getSuggestions().eq(0);a=this.view._getSuggestions().eq(1);this.view._setCursor(a);this.view.moveCursorUp();expect(this.view._getCursor()).toBe(b)});it("should move cursor to bottom if cursor is not present",function(){var a;a=this.view._getSuggestions().eq(-1);this.view.moveCursorUp();expect(this.view._getCursor()).toBe(a)});it("should remove cursor if already at top",function(){var a;a=this.view._getSuggestions().eq(0);this.view._setCursor(a);this.view.moveCursorUp();expect(this.view._getCursor().length).toBe(0)})});describe("#moveCursorDown",function(){beforeEach(function(){this.view.open()});it("should move the cursor down",function(){var b,a;b=this.view._getSuggestions().eq(0);a=this.view._getSuggestions().eq(1);this.view._setCursor(b);this.view.moveCursorDown();expect(this.view._getCursor()).toBe(a)});it("should move cursor to top if cursor is not present",function(){var a;a=this.view._getSuggestions().eq(0);this.view.moveCursorDown();expect(this.view._getCursor()).toBe(a)});it("should remove cursor if already at bottom",function(){var a;a=this.view._getSuggestions().eq(-1);this.view._setCursor(a);this.view.moveCursorDown();expect(this.view._getCursor().length).toBe(0)})});describe("#getDatumForSuggestion",function(){it("should extract the datum from the suggestion element",function(){var a,b;a=$("<div>").data({ttValue:"one",ttDatum:"two"});b=this.view.getDatumForSuggestion(a);expect(b).toEqual({value:"one",raw:"two"})});it("should return null if no element is given",function(){expect(this.view.getDatumForSuggestion($("notreal"))).toBeNull()})});describe("#getDatumForCursor",function(){it("should return the datum for the cursor",function(){var a;a=this.view._getSuggestions().eq(0);a.data({ttValue:"one",ttDatum:"two"});this.view._setCursor(a);expect(this.view.getDatumForCursor()).toEqual({value:"one",raw:"two"})})});describe("#getDatumForTopSuggestion",function(){it("should return the datum for top suggestion",function(){var a;a=this.view._getSuggestions().eq(0);a.data({ttValue:"one",ttDatum:"two"});expect(this.view.getDatumForTopSuggestion()).toEqual({value:"one",raw:"two"})})});describe("#update",function(){it("should invoke update on each dataset",function(){this.view.update();expect(this.dataset.update).toHaveBeenCalled()})});describe("#empty",function(){it("should invoke clear on each dataset",function(){this.view.empty();expect(this.dataset.clear).toHaveBeenCalled()})});describe("#isVisible",function(){it("should return true if open and not empty",function(){this.view.isOpen=true;this.view.isEmpty=false;expect(this.view.isVisible()).toBe(true);this.view.isOpen=false;this.view.isEmpty=false;expect(this.view.isVisible()).toBe(false);this.view.isOpen=true;this.view.isEmpty=true;expect(this.view.isVisible()).toBe(false);this.view.isOpen=false;this.view.isEmpty=false;expect(this.view.isVisible()).toBe(false)})});describe("#destroy",function(){it("should remove event handlers",function(){var a=this.view.$menu;spyOn(a,"off");this.view.destroy();expect(a.off).toHaveBeenCalledWith(".tt")});it("should destroy its datasets",function(){this.view.destroy();expect(this.dataset.destroy).toHaveBeenCalled()});it("should null out its reference to the menu element",function(){this.view.destroy();expect(this.view.$menu).toBeNull()})})});
describe("tokenizers",function(){it(".whitespace should tokenize on whitespace",function(){var a=tokenizers.whitespace("big-deal ok");expect(a).toEqual(["big-deal","ok"])});it(".whitespace should treat null as empty string",function(){var a=tokenizers.whitespace(null);expect(a).toEqual([])});it(".whitespace should treat undefined as empty string",function(){var a=tokenizers.whitespace(undefined);expect(a).toEqual([])});it(".nonword should tokenize on non-word characters",function(){var a=tokenizers.nonword("big-deal ok");expect(a).toEqual(["big","deal","ok"])});it(".nonword should treat null as empty string",function(){var a=tokenizers.nonword(null);expect(a).toEqual([])});it(".nonword should treat undefined as empty string",function(){var a=tokenizers.nonword(undefined);expect(a).toEqual([])});it(".obj.whitespace should tokenize on whitespace",function(){var a=tokenizers.obj.whitespace("val");var b=a({val:"big-deal ok"});expect(b).toEqual(["big-deal","ok"])});it(".obj.whitespace should accept multiple properties",function(){var a=tokenizers.obj.whitespace("one","two");var b=a({one:"big-deal ok",two:"buzz"});expect(b).toEqual(["big-deal","ok","buzz"])});it(".obj.nonword should tokenize on non-word characters",function(){var a=tokenizers.obj.nonword("val");var b=a({val:"big-deal ok"});expect(b).toEqual(["big","deal","ok"])});it(".obj.nonword should accept multiple properties",function(){var a=tokenizers.obj.nonword("one","two");var b=a({one:"big-deal ok",two:"buzz"});expect(b).toEqual(["big","deal","ok","buzz"])})});